export declare type Node = {
    type: 'Identifier' | 'FunctionDeclaration' | 'VariableDeclaration' | 'ExportNamedDeclaration' | 'ExportDefaultDeclaration' | 'ExpressionStatement' | 'VariableDeclaration' | 'CallExpression' | 'VariableDeclarator' | 'MemberExpression';
    name: string;
    body: {
        body: any[];
    };
    init: Node[];
    callee: Node;
    expression: Node;
    property: Node;
    declaration: {
        declarations: {
            init: Node;
        }[];
    };
    declarations: {
        init: Node;
    }[] & Node[];
};
export declare type Program = {
    body: Node[];
};
export declare type Options = {
    groups: string[];
};
export declare type Context = {
    report(node: Node, message: string): void;
    options: Options[];
};
